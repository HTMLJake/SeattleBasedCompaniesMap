{"version":3,"sources":["App.js","sidebar.js","registerServiceWorker.js","index.js"],"names":["infowindow","Sidebar","_this","this","react_default","a","createElement","id","className","props","sidebar","value","filter","onChange","handleChange","aria-label","onFocus","showMenu","ref","sidebarList","map","val","i","tabIndex","role","key","onClick","SidebarSelection","name","Component","google","window","wScripts","document","getElementsByTagName","App","state","locations","markers","prevSelection","initMap","bounds","maps","LatLngBounds","_this2","setState","Map","getElementById","center","lat","lng","zoom","fetch","then","response","json","length","marker","m","Marker","position","pos","title","animation","Animation","DROP","extend","pushMarker","fitBounds","fillSidebar","index","tempArray","push","Object","assertThisInitialized","addListener","anchor","setAnimation","NONE","showInfoWindow","BOUNCE","googleMap","FetchAPI","open","setMarker","toggleSidebar","showSidebar","hideSidebar","event","target","input","item","currentTarget","classList","toggle","undefined","close","console","log","parentNode","ShowSelectedListings","childNodes","getMarkerIndex","elem","textContent","gMap","_Bounds","setMap","mIndex","_marker","setZoom","newList","loc","tags","includes","location","setContent","concat","tag","toFixed","apiFetchImgs","catch","err","api","venues","img","photos","items","prefix","suffix","_this3","addEventListener","e","activeElement","outerHTML","InfoWindow","windowGoogle","s","src","onSelect","fiter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","URL","process","origin","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.69d434c7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Sidebar from \"./sidebar.js\"\n\nlet google = window.google;\nlet infowindow;\n\nconst wScripts = window.document.getElementsByTagName(\"script\");\n\n\nclass App extends Component {\n  state = {\n    locations: [],\n    markers: [],\n    map: {},\n    filter: \"all\",\n    sidebar: \" \",\n    prevSelection: \"\",\n    sidebarList: []\n  }\n\n  componentDidMount() {\n\n    window.document.addEventListener(\"keydown\", e => {\n      if(e.key === \"Enter\") {\n        console.log(e.key);\n        if(document.activeElement.outerHTML.includes(\"li\")) {\n          this.SidebarSelection(document.activeElement);\n        } else if(document.activeElement.outerHTML.includes(\"hamburger\")){\n          this.toggleSidebar();\n        }\n      }\n    })\n\n    if(google) {\n      infowindow = new window.google.maps.InfoWindow();\n      this.initMap();\n    } else {\n      let windowGoogle;\n      for (let s = 0; s < wScripts.length; s++) {\n        if(wScripts[s].src.includes(\"googleapi\")) {\n          windowGoogle = wScripts[s]; \n        }\n      }\n      if(windowGoogle) {\n        windowGoogle.addEventListener(\"load\", e => {\n          google = window.google;\n          infowindow = new window.google.maps.InfoWindow();\n          this.initMap();\n        })\n        windowGoogle.addEventListener(\"error\", event => {\n          console.log(event);\n        })\n      }\n    }\n  }\n\n  initMap = () => {\n    var bounds = new google.maps.LatLngBounds();\n    this.setState({\n        map: new google.maps.Map(document.getElementById('map'), {\n          center: {lat:47.649297, lng:-122.351629},\n          zoom: 11\n      })\n    });\n    fetch('./locations.json').then((response) => {\n        return response.json();\n    }).then((json) => {\n      this.setState({\n        locations: json\n      })\n        for (let i = 0; i < this.state.locations.length; i++) {\n            const marker = this.state.locations[i];\n            var m = new google.maps.Marker({\n                position: marker.pos,\n                title: marker.name,\n                map: this.state.map,\n                animation: google.maps.Animation.DROP\n            })\n            bounds.extend(m.position);\n            this.pushMarker(m,i);\n        } \n    }).then(() => {\n        this.state.map.fitBounds(bounds);\n        this.fillSidebar(this.state.filter);\n    })\n  }\n\n\n  pushMarker = (marker, index) => {\n    var tempArray = this.state.markers;\n    tempArray.push(marker);\n    this.setState({\n      markers: tempArray\n    })\n    \n    let _this = this;\n    \n    marker.addListener('click' , function() {\n      //populateInfoWindow(this, infoWindow);\n      if(infowindow.anchor){\n        infowindow.anchor.setAnimation(google.maps.Animation.NONE);\n      }\n      _this.showInfoWindow(marker, index);\n      marker.setAnimation(google.maps.Animation.BOUNCE);\n    })\n  }\n  \n  showInfoWindow = (marker, i) => {\n    let googleMap = this.state.map;\n    if (infowindow.marker !== marker) {\n      infowindow.marker = marker;\n      this.FetchAPI(this.state.locations[i]);\n      infowindow.open(googleMap, marker);\n      // Make sure the marker property is cleared if the infowindow is closed.\n      infowindow.addListener('closeclick',function(){\n        marker.setAnimation(google.maps.Animation.NONE);\n        infowindow.setMarker = null;\n      });  \n    }\n  }\n\n  toggleSidebar = () => {\n    if(this.state.sidebar === \" \") {\n      this.setState({\n        sidebar: \" open\"\n      })\n    } else {\n      this.setState({\n        sidebar: \" \"\n      })\n    }\n  }\n\n  showSidebar = () => {\n    if(this.state.sidebar === \" \") {\n      this.setState({\n        sidebar: \" open\"\n      })\n    }\n  }\n\n  hideSidebar = () => {\n    if(this.state.sidebar === \" open\") {\n      this.setState({\n        sidebar: \" \"\n      })\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      filter: event.target.value\n    });\n    this.fillSidebar(event.target.value);\n  }\n\n  SidebarSelection = (input) => {\n    let prevSelection = this.state.prevSelection\n    let item;\n    if(input.currentTarget) {\n      item = input.currentTarget;\n    } else {\n      item = input;\n    }\n\n    if(prevSelection) {\n        if(prevSelection === item) {\n            item.classList.toggle(\"selected\");\n            prevSelection = undefined;\n            infowindow.setMarker = null;\n            infowindow.close();\n            console.log(item.parentNode);\n            this.ShowSelectedListings(item.parentNode.childNodes);\n        } else {\n            prevSelection.classList.toggle(\"selected\");\n            item.classList.toggle(\"selected\");\n            prevSelection = item;\n            this.ShowSelectedListings(item);\n        }\n    } else {\n        item.classList.toggle(\"selected\");\n        prevSelection = item;\n        this.ShowSelectedListings(item);\n    }  \n\n    this.setState({\n      prevSelection: prevSelection\n    });\n}\n\n  getMarkerIndex = (elem) => {\n    let index = 0;\n    for (let i = 0; i < this.state.markers.length; i++) {\n        const m = this.state.locations[i];\n        if (elem.textContent && elem.textContent === m.name) {\n            index = i;\n        } else if(elem.name === m.name) {\n          index = i;\n        }\n    }\n    return index;\n}\n\nShowSelectedListings = (item) => {\n\n  let gMap = this.state.map;\n  var _Bounds = new google.maps.LatLngBounds();\n  //Set all markers map to none\n  for (let i = 0; i < this.state.markers.length; i++) {\n    this.state.markers[i].setMap(null);\n    this.state.markers[i].setAnimation(google.maps.Animation.NONE);\n  }\n\n  //then only set the selected markers maps\n  if (item.length > 0) {\n    for (let i = 0; i < item.length; i++) {\n      let mIndex = this.getMarkerIndex(item[i]);\n      this.state.markers[mIndex].setMap(gMap);\n      _Bounds.extend(this.state.markers[mIndex].position);\n      gMap.fitBounds(_Bounds);\n    }\n  } else {\n    let mIndex = this.getMarkerIndex(item);\n    let _marker = this.state.markers[mIndex];\n    _marker.setAnimation(google.maps.Animation.BOUNCE);\n    _marker.setMap(gMap);\n    _Bounds.extend(_marker.position);\n    this.showInfoWindow(_marker, mIndex);\n    gMap.fitBounds(_Bounds);\n    gMap.setZoom(12);\n  }\n}\n\n\n  fillSidebar = (filter) => {\n    let newList;\n    if(filter === \"all\") {\n      newList = this.state.locations;\n    } else {\n      newList = this.state.locations.filter(loc => {return loc.tags.includes(filter)});\n    }\n\n    this.ShowSelectedListings(newList);\n\n    this.setState({\n      sidebarList: newList\n    })\n  }\n\n  FetchAPI = (location) => {\n    infowindow.setContent(\n      `<h2>${location.name}</h2>\n      <p>\n      ${location.tags.map(tag => `<span> ${tag}</span>`)}\n      </p>\n      `)\n\n    fetch(`https://api.foursquare.com/v2/venues/search?ll=${location.pos.lat.toFixed(2)},${this.state.locations[0].pos.lng.toFixed(2)}&client_id=XFCQCFTGSRV30JUYFS5OZYMXCVJ3DS1K20QR3FDC1K5YFZDY%20&client_secret=%203CFG54PJ4XKFL1DC5CLCKYMO5EK131OPTQSIMGPER53CZ2TO&v=20180423&query=${location.name}`)\n      .then(response => {\n        this.apiFetchImgs(response.json(), location);\n      }).catch(err => {\n        infowindow.setContent(\n          `<h2>${location.name}</h2>\n          <p>Couldn't retrieve image</p>\n          <p>\n            ${location.tags.map(tag => `<span>${tag}</span>`)}\n          </p>\n          `)\n      })\n  }\n\n  apiFetchImgs = (api, location) => {\n    api.then((response) => {\n      fetch(`https://api.foursquare.com/v2/venues/${response.response.venues[0].id}/photos?client_id=XFCQCFTGSRV30JUYFS5OZYMXCVJ3DS1K20QR3FDC1K5YFZDY%20&client_secret=%203CFG54PJ4XKFL1DC5CLCKYMO5EK131OPTQSIMGPER53CZ2TO&v=20180423`)\n      .then(response => {\n        return response.json();\n      }).then(json => {\n        let img = json.response.photos.items[0];\n        let size = 125;\n        infowindow.setContent(\n          `<h2>${location.name}</h2>\n          <img src=${img.prefix + size + img.suffix} alt=${location.name}/>\n          <p>\n            ${location.tags.map(tag => `<span>${tag}</span>`)}\n          </p>\n          `)\n      })\n    })\n  }\n\n\n\n  render() {\n    return (\n      <section>\n        <div \n          tabIndex=\"1\" \n          id=\"hamburger\" \n          className={\"hamburger\" + this.state.sidebar} \n          onClick={this.toggleSidebar}\n          onSelect={this.toggleSidebar}\n        >\n            <div tabIndex=\"-1\" className=\"bar\"></div>\n            <div tabIndex=\"-1\" className=\"bar\"></div>\n            <div tabIndex=\"-1\" className=\"bar\"></div>\n        </div>\n        <Sidebar \n          SidebarSelection={this.SidebarSelection}\n          handleChange={this.handleChange}\n          sidebarList={this.state.sidebarList}\n          sidebar={this.state.sidebar}\n          fiter={this.state.filter}\n          showMenu={this.showSidebar}\n        />\n        <div className=\"main\" onClick={this.hideSidebar} onFocus={this.hideSidebar}>\n            <div tabIndex=\"1\" className=\"title\"><h1 className=\"header-title\">Seattle Based Companies</h1></div>\n            <div tabIndex=\"-1\" id=\"map\" className=\"map\">Google Maps not loaded</div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\n\nclass Sidebar extends Component {\n    render() {\n        return (\n            <nav id=\"sidebar\" className={\"sidebar\" + this.props.sidebar}>\n            <header className=\"sidebar-header\">\n                <h2>Locations</h2>\n                <p>Filter</p>\n                <select\n                    value={this.props.filter}\n                    onChange={this.props.handleChange}\n                    className=\"select\"\n                    aria-label=\"Filter selection dropdown\"\n                    onFocus={this.props.showMenu}\n                >\n                    <option value=\"all\">All</option>\n                    <option value=\"google\">Google</option>\n                    <option value=\"microsoft\">Microsoft</option>\n                    <option value=\"tech\">Tech</option>\n                    <option value=\"shopping\">Shopping</option>\n                    <option value=\"food\">Food</option>\n                    <option value=\"other\">Other</option>\n                </select>\n            </header>\n            <menu id=\"list\" className=\"list\" ref=\"companysList\">\n                {this.props.sidebarList.map((val ,i) => {\n                    return (\n                    <li\n                        onFocus={this.props.showMenu}\n                        tabIndex=\"0\"\n                        role=\"button\"\n                        key={i}\n                        className=\"list-item\"\n                        onClick={this.props.SidebarSelection}>{val.name}\n                    </li>)\n                })}\n            </menu>\n            </nav>\n        )\n    }\n}\n\nexport default Sidebar;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}